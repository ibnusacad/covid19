{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Header/Header.jsx","App.js","index.js","components/Header/Header.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/coronavirus.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","cx","card","infected","title","countUp","start","end","value","duration","separator","date","Date","toDateString","active","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","onClick","e","target","i","type","key","Header","header","image","src","covid","alt","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd4f974.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__rICdi\",\"card\":\"Cards_card__vgFOt\",\"title\":\"Cards_title__qGkiD\",\"countUp\":\"Cards_countUp__3aX-A\",\"date\":\"Cards_date__1Uhhk\",\"infected\":\"Cards_infected__3YOR1\",\"recovered\":\"Cards_recovered__2JcRm\",\"deaths\":\"Cards_deaths__33Vnt\",\"active\":\"Cards_active__tbEDC\"};","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={cx(styles.card, styles.infected)}>\r\n        <div className={styles.title}>Infected Cases</div>\r\n        <div className={styles.countUp}>\r\n          <CountUp\r\n            start={0}\r\n            end={confirmed.value}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          />\r\n        </div>\r\n        <p className={styles.date}>{new Date(lastUpdate).toDateString()}</p>\r\n      </div>\r\n      <div className={cx(styles.card, styles.active)}>\r\n        <div className={styles.title}>Active Cases</div>\r\n        <div className={styles.countUp}>\r\n          <CountUp\r\n            start={0}\r\n            end={confirmed.value - (deaths.value + recovered.value)}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          />\r\n        </div>\r\n        <p className={styles.date}>{new Date(lastUpdate).toDateString()}</p>\r\n      </div>\r\n      <div className={cx(styles.card, styles.recovered)}>\r\n        <div className={styles.title}>Recovered Cases</div>\r\n        <div className={styles.countUp}>\r\n          <CountUp\r\n            start={0}\r\n            end={recovered.value}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          />\r\n        </div>\r\n        <p className={styles.date}>{new Date(lastUpdate).toDateString()}</p>\r\n      </div>\r\n\r\n      <div className={cx(styles.card, styles.deaths)}>\r\n        <div className={styles.title}>Deaths Cases</div>\r\n        <div className={styles.countUp}>\r\n          <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n        </div>\r\n        <p className={styles.date}>{new Date(lastUpdate).toDateString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl)\r\n\r\n\r\n\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map(dailyData => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n        return countries.map(country => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"./../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\"rgb(0,0,249)\", \"rgb(0,249,0)\", \"rgb(249,0,0)\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"./../../api/index\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <select onClick={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n\r\n        {fetchedCountries.map((country, i) => (\r\n          <option type=\"button\" key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport covid from \"../../images/coronavirus.png\";\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <img className={styles.image} src={covid} alt=\"covoravirus\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components'\nimport { fetchData } from './api/index'\nimport styles from './App.module.css'\nimport Header from './components/Header/Header';\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n  }\n  async componentDidMount() {\n    const data = await fetchData()\n    this.setState({ data })\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country)\n    this.setState({ data: fetchedData, country: country })\n  }\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Header />\n        <div>\n          <h2>Select a country </h2>\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n        </div>\n        <Cards data={data} />\n        <Chart data={data} country={country} />\n\n\n      </div>\n\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__11zI9\",\"image\":\"Header_image__Ja4jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__m4fDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2cBqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__21_Ga\",\"section\":\"App_section__2YS25\"};","module.exports = __webpack_public_path__ + \"static/media/coronavirus.34967c3b.png\";"],"sourceRoot":""}